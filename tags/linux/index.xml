<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux on nito95 blog</title>
    <link>https://nito95.github.io/tags/linux/</link>
    <description>Recent content in Linux on nito95 blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 09 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nito95.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rubyのメモリ割り当て</title>
      <link>https://nito95.github.io/posts/2021-08-09/</link>
      <pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nito95.github.io/posts/2021-08-09/</guid>
      <description>とあるSaaS製品を開発保守している知り合いが、Puma (Rails) のメモリが高止まりしてしまう現象が起きていたが、記事 Ruby: mallocでマルチスレッドプログラムのメモリが倍増する理由（翻訳） を参考に環境変数 MALLOC_ARENA_MAX をいじったら解決したと話していました。
自分も現在 Puma (Rails) で動いているSNSアプリのバックエンドを担当しています。 1日あたり180 ~ 250万のAPIリクエストが行われており、1つのインスタンスあたり 2 worker * 8~32 threads = 16~64 threads でリクエストを処理しています。 今は特にメモリで困ってはいないですが、いつか同じ現象に悩まされるかもと思い、記事を読みつつ周辺知識を調べて深掘ってみました。
メモリ割り当てで使われる3つのレイヤー Ruby でのメモリ割り当てには3つのレイヤーが関与します。
 Ruby VM メモリアロケータ カーネル  Ruby VMではRubyのオブジェクトを管理がされています。
  Rubyのオブジェクトは40byte固定で、オブジェクトが生成されるとヒープページ内のスロットに格納されます。 もし空きスロットがない場合は新たなヒープページを割り当てます。 また40byte以上のオブジェクトの場合はヒープページの外に格納し、スロットにはポインタが格納されます。 新たなヒープページの割り当て、ヒープページ外への格納、これはどちらもメモリアロケータが使われます。
メモリアロケータには glibc の malloc() と free() が使われます。 mallocは引数にメモリのサイズを自由に指定できる一方、配置される場所については何も保証されません。 メモリアロケータは余裕を持った大きさのメモリをカーネルから割り当てます。
カーネルはページ単位でメモリを割り当てます。ページサイズはx86_64アーキテクチャにおいては4KBです。 仮想記憶の仕組みを用いてメモリの物理アドレスは仮想アドレスに抽象化されます。カーネルというよりOS特有の仮想メモリマネージャと言い換えてもいいですね。
オブジェクトを生成すると Ruby ヒープページ → メモリアロケータ → カーネル → 物理メモリ と複数のレイヤーを通り、各レイヤーは必要な量よりも多めに割り当てます。 そしてRuby ヒープページには空スロットが存在し得えて、メモリアロケータが確保したヒープにも空きが存在し得ます。top コマンドでプロセスのメモリ使用量を見ると、カーネル観点でのメモリ使用量が表示されるだけなので、Ruby ヒープページでどのくらい使われているのか、メモリアロケータでどのくらい使われているかはわかりません。
フラグメンテーション フラグメンテーションは、使用中のメモリ領域が未使用領域を挟んで飛び飛びに配置される状態を指します。フラグメンテーションは Ruby ヒープページとメモリアロケータそれぞれで起こり得ます。</description>
    </item>
    
  </channel>
</rss>
